stages:
  - build
  - test
  - deploy
  - publish

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/
      - go.sum

.dind_build_setup:
  image: docker:24.0.5
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  services:
    - name: docker:24.0.5-dind
      alias: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  tags:
    - docker-in-docker
  only:
    refs:
      - master

#include:
#  - template: Security/SAST.gitlab-ci.yml

#unit tests:
#  stage: test
#  image: golang:1.22.5
#  environment:
#    name: Test
#  extends:
#    - .go-cache
#  script:
#    - go mod tidy
#    - go get gotest.tools/gotestsum@latest
#
#    - cd test
#    - go run gotest.tools/gotestsum --junitfile report.xml
#    - go test $(go list ./... | grep -v /vendor/) -v -coverprofile .testCoverage.txt
#  artifacts:
#    reports:
#      junit: report.xml
#    expire_in: 2 days
#    when: always
#  only:
#    refs:
#      - main
#      - test
#

publish package:
  stage: publish
  image: bash:latest
  variables:
    PACKAGENAME: 'gitlab.qvineox.ru/domsnail/threat-intel-core'
    VERSION: '0.0.4'
  script:
    - |
      apk add curl
      echo "${VERSION}" > version.txt
      echo "${VERSION}" > version-${VERSION}.txt
      echo "VERSION=${VERSION}" > version.env
      tar -czvf ${PACKAGENAME}.${VERSION}.tar.gz .
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ${PACKAGENAME}.${VERSION}.tar.gz ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGENAME}/${VERSION}/${PACKAGENAME}.${VERSION}.tar.gz


